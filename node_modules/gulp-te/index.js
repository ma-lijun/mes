/**
 * Created by doveaz on 2016/10/31.
 */
const cheerio = require('cheerio'),
    gutil = require('gulp-util'),
    fs=require('fs'),
    through = require('through2');

function log(e){
    return console.log(e)
}

module.exports = function (options) {
    return through.obj(function (file, enc, cb) {
        if (file.isNull()) {
            this.push(file);
            return cb()
        }

        if (file.isStream()) {
            this.emit('error', new gutil.PluginError(PLUGIN_NAME, 'Streaming not supported'));
            return cb()
        }

        var content = file.contents.toString();

        const reg=/{{\s*([^\s|\(]*)\s*(\((.*)\))?}}/;

        const regGlobal=/{{\s*([^\s|\(]*)\s*(\((.*)\))?}}/g;

        var regCondult=reg.exec(content);

       try{
           if(!!regCondult){

               var regCounts = content.match(regGlobal).length;
               for (var i=0;i<regCounts;i++) {
                   content = content.replace(reg, function (word) {

                       var conf = word.match(reg);

                       if(conf[2]){
                           var conf2 = conf[2].slice(1, -1).split(',');

                           if (conf2.length == 3) {
                               var jq = conf2[0];

                               var order = conf2[1];

                               var htmlClass = conf2[2];

                               var txt = fs.readFileSync(file.base+'/' + 'template/' + conf[1] + '.html');
                               //todo 修改固定路径www为所读取文件同级

                               var $ = cheerio.load(txt, {
                                   withDomLvl1: true,
                                   normalizeWhitespace: false,
                                   xmlMode: false,
                                   decodeEntities: false
                               });

                               $(jq).eq(parseFloat(order) - 1).addClass(htmlClass);

                               return $.html()
                           } else if (conf2.length == 2) {
                               var jq = conf2[0];

                               var order = conf2[1];


                               var txt = fs.readFileSync(file.base+'/'+ 'template/' + conf[1] + '.html');
                               //todo 修改固定路径www为所读取文件同级

                               var $ = cheerio.load(txt, {
                                   withDomLvl1: true,
                                   normalizeWhitespace: false,
                                   xmlMode: false,
                                   decodeEntities: false
                               });

                               $(jq).eq(parseFloat(order) - 1).addClass('on');

                               return $.html()
                           } else if (conf2.length == 1) {

                               var order = conf2[0];

                               var txt = fs.readFileSync(file.base+'/' + 'template/' + conf[1] + '.html');
                               //todo 修改固定路径www为所读取文件同级

                               var $ = cheerio.load(txt, {
                                   withDomLvl1: true,
                                   normalizeWhitespace: false,
                                   xmlMode: false,
                                   decodeEntities: false
                               });

                               $('li').eq(parseFloat(order) - 1).addClass('on');

                               return $.html()
                           } else {
                               log('参数格式错误，请使用逗号分隔')
                           }
                       }else{
                           var txt = fs.readFileSync(file.base+'/' + 'template/' + conf[1] + '.html');
                           //todo 修改固定路径www为所读取文件同级

                           var $ = cheerio.load(txt, {
                               withDomLvl1: true,
                               normalizeWhitespace: false,
                               xmlMode: false,
                               decodeEntities: false
                           });
                           return $.html()
                       }

                   })
               }

               file.contents = new Buffer(content);

           }
       }catch(err){
           this.emit('error', new gutil.PluginError('gulp-ejs', err.toString()));
       }
        this.push(file);

        cb();
    });
};
